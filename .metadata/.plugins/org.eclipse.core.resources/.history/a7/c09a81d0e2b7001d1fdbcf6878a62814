package com.control.veterinaria.model;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.NamedQuery;
import jakarta.persistence.SequenceGenerator;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Entity
@Table(name="Colaborador")
@NamedQuery(name = "Colaborador.findAll", query = "SELECT c FROM Colaborador c")
@NoArgsConstructor
@AllArgsConstructor
public class Colaborador {
	@Id
	@SequenceGenerator(name = "COLABORADOR_ID_GENERATOR", allocationSize = 1, sequenceName = "COLABORADOR_SEQ")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "COLABORADOR_ID_GENERATOR")
	private int id;
	@Column(nullable = false)
	@NotEmpty(message = "El nombre no puede estar vacio")
	private String nombre;
	@Column(nullable = false)
	@NotEmpty(message = "El apellido no puede estar vacio")
	private String apellido;
	@Column(nullable = false, length = 255)
	@NotEmpty(message = "El cargo no puede estar vacio")
	private String cargo;
	@Column(nullable = true)
	private String especialidad;
	@Column(nullable = false, length = 3)
	@NotEmpty(message = "El tipo de documento no puede estar vacio")
	private String tipo_documento;
	@Column(nullable = false, unique = true)
	@NotNull(message = "El numero de identificación no puede estar vacio")
	@Min(value = 1000000, message = "El número de identificación debe tener entre 7 y 10 caracteres")

	private int documento_identificacion;
	
}
